---
- name: arch | install default packages
  community.general.pacman:
    name: "{{ packages + host_packages }}"
    update_cache: true
  become: true
  when:
    - ansible_facts['distribution'] == "ArchLinux"

- name: fedora | install default packages
  ansible.builtin.dnf:
    name: "{{ host_packages }}"
    update_cache: true
  become: true
  when:
    - ansible_facts['distribution'] == "Fedora"

- name: fedora | clone nwg-displays repo
  ansible.builtin.git:
    repo: https://github.com/nwg-piotr/nwg-displays.git
    dest: /tmp/nwg-displays
  when:
    - ansible_facts['distribution'] == "Fedora"

- name: fedora | install nwg-displays
  ansible.builtin.shell: |
    cd /tmp/nwg-displays
    ./install.sh
  become: true
  when:
    - ansible_facts['distribution'] == "Fedora"

- name: clone dotfiles repo
  ansible.builtin.git:
    repo: git@github.com:jarias/dotfiles.git
    dest: /home/{{ username }}/.dotfiles
    bare: true
  tags: [dotfiles]

- name: config dotfiles repo
  community.general.git_config:
    name: status.showUntrackedFiles
    repo: /home/{{ username }}/.dotfiles
    scope: local
    value: "no"
  tags: [dotfiles]

- name: create GTK themes folder
  ansible.builtin.file:
    path: /home/{{ username }}/.themes
    state: directory
    recurse: true

- name: install Dracula GTK theme
  ansible.builtin.git:
    repo: https://github.com/dracula/gtk.git
    dest: /home/{{ username }}/.themes/Dracula

- name: create icons folder
  ansible.builtin.file:
    path: /home/{{ username }}/.icons
    state: directory

- name: install Dracula icons
  ansible.builtin.unarchive:
    src: https://github.com/dracula/gtk/files/5214870/Dracula.zip
    dest: /home/{{ username }}/.icons/
    remote_src: yes

- name: create zsh plugins folder
  ansible.builtin.file:
    path: /home/{{ username }}/.zsh/plugins
    state: directory

- name: clone zsh-history-substring-search
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-history-substring-search.git
    dest: /home/{{ username }}/.zsh/plugins/zsh-history-substring-search

- name: enable systemd user services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    daemon_reload: true
    scope: user
  with_items: "{{ systemd_user_services + host_systemd_user_services }}"
  tags: [systemd]

- name: enable systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    daemon_reload: true
  become: true
  with_items:
    - pcscd.service
    - bluetooth.service
  tags: [systemd]
  when:
    - ansible_facts['distribution'] == "ArchLinux"

- name: kernel modules
  ansible.builtin.copy:
    src: "{{ item }}/{{ item }}.conf"
    dest: /etc/modules-load.d/{{ item }}.conf
  become: true
  with_items: "{{ kernel_modules + host_kernel_modules }}"
  tags: [kernel_modules]
  when:
    - ansible_facts['distribution'] == "ArchLinux"

- name: kernel modules options
  ansible.builtin.copy:
    src: "{{ item }}/{{ item }}-options.conf"
    dest: /etc/modprobe.d/{{ item }}.conf
  become: true
  with_items: "{{ kernel_modules + host_kernel_modules }}"
  tags: [kernel_modules]
  when:
    - ansible_facts['distribution'] == "ArchLinux"
