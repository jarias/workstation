---
- name: arch | install default packages
  community.general.pacman:
    name: "{{ base_packages + packages + host_packages }}"
    update_cache: true
  become: true
  when:
    - ansible_facts['distribution'] == "Archlinux"

- name: fedora | install default packages
  ansible.builtin.dnf:
    name: "{{ base_packages + packages + host_packages }}"
    update_cache: true
  become: true
  when:
    - ansible_facts['distribution'] == "Fedora"

- name: fedora | clone nwg-displays repo
  ansible.builtin.git:
    repo: https://github.com/nwg-piotr/nwg-displays.git
    dest: /tmp/nwg-displays
  when:
    - ansible_facts['distribution'] == "Fedora"

- name: fedora | install nwg-displays
  ansible.builtin.shell: |
    cd /tmp/nwg-displays
    ./install.sh
  become: true
  args:
    creates: /usr/local/bin/nwg-displays
  when:
    - ansible_facts['distribution'] == "Fedora"

- name: fedora | Download yazi binaries
  ansible.builtin.unarchive:
    src: https://github.com/sxyazi/yazi/releases/download/v0.4.2/yazi-aarch64-unknown-linux-gnu.zip
    dest: /tmp
    remote_src: yes
  when:
    - ansible_facts['distribution'] == "Fedora"

- name: fedora | Install yazi binaries
  ansible.builtin.copy:
    src: /tmp/yazi-aarch64-unknown-linux-gnu/{{ item }}
    dest: /usr/local/bin/{{ item }}
    remote_src: yes
    mode: '0755'
  with_items: ["ya", "yazi"]
  become: true
  when:
    - ansible_facts['distribution'] == "Fedora"

- name: clone dotfiles repo
  ansible.builtin.git:
    repo: https://github.com/jarias/dotfiles.git
    dest: /home/{{ username }}/dotfiles
  tags: [dotfiles]

- name: stow the dotfiles
  ansible.builtin.shell: | 
    cd /home/{{ username }}/dotfiles
    stow .

- name: update dotfiles remote
  community.general.git_config:
    repo: /home/{{ username }}/dotfiles
    scope: local
    name: 'remote.origin.url'
    value: git@github.com:jarias/dotfiles.git
  tags: [dotfiles]

- name: create GTK themes folder
  ansible.builtin.file:
    path: /home/{{ username }}/.themes
    state: directory
    recurse: true

- name: install Dracula GTK theme
  ansible.builtin.git:
    repo: https://github.com/dracula/gtk.git
    dest: /home/{{ username }}/.themes/Dracula

- name: create icons folder
  ansible.builtin.file:
    path: /home/{{ username }}/.icons
    state: directory

- name: install Dracula icons
  ansible.builtin.unarchive:
    src: https://github.com/dracula/gtk/files/5214870/Dracula.zip
    dest: /home/{{ username }}/.icons/
    remote_src: yes

- name: enable systemd user services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    daemon_reload: true
    scope: user
  with_items: "{{ systemd_user_services + host_systemd_user_services }}"
  tags: [systemd]

- name: enable systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    daemon_reload: true
  become: true
  with_items:
    - pcscd.service
    - bluetooth.service
  tags: [systemd]
  when:
    - ansible_facts['distribution'] == "Archlinux"

- name: kernel modules
  ansible.builtin.copy:
    src: "{{ item }}/{{ item }}.conf"
    dest: /etc/modules-load.d/{{ item }}.conf
  become: true
  with_items: "{{ kernel_modules + host_kernel_modules }}"
  tags: [kernel_modules]
  when:
    - ansible_facts['distribution'] == "Archlinux"

- name: kernel modules options
  ansible.builtin.copy:
    src: "{{ item }}/{{ item }}-options.conf"
    dest: /etc/modprobe.d/{{ item }}.conf
  become: true
  with_items: "{{ kernel_modules + host_kernel_modules }}"
  tags: [kernel_modules]
  when:
    - ansible_facts['distribution'] == "Archlinux"
